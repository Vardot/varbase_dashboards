<?php

/**
 * @file
 * Contains varbase_dashboards.module.
 */

/**
 * Implements hook_element_info_alter().
 */
function varbase_dashboards_page_attachments(array &$attachments) {
  $routers = [
    'entity.dashboard.canonical',
    'layout_builder.dashboards.view',
    'layout_builder.dashboards_override.view',
  ];

  if (in_array(\Drupal::routeMatch()->getRouteName(), $routers)) {
    // Attach our extra CSS for Varbase dashboard.
    $attachments['#attached']['library'][] = 'varbase_dashboards/style';
  }
}

/**
 * Implements hook_theme().
 */
function varbase_dashboards_theme($existing, $type, $theme, $path) {
  return [
    'block__varbase_dashboard_user' => [
      'base hook' => 'block',
    ],
  ];
}

/**
 * Implements hook_toolbar().
 */
function varbase_dashboards_toolbar_alter(&$items) {
  if (isset($items['dashboards'])) {
    unset($items['dashboards']);
  }
}

/**
 * Implements hook_layout_alter().
 */
function varbase_dashboards_layout_alter(&$definitions) {
  $supported_themes = ['gin', 'claro'];
  $active_theme = \Drupal::theme()->getActiveTheme()->getName();

  if (in_array($active_theme, $supported_themes)) {
    $varbase_dashboards_patch = \Drupal::service('extension.list.module')->getPath('varbase_dashboards');
    foreach ($definitions as $layout_id => $definition) {
      if (_is_in_back_end_layout_list($layout_id)) {
        _set_layout_template_path_and_cache_tags($definition, $active_theme, $varbase_dashboards_patch, $layout_id);
      }
    }
  }
}

/**
 * Set the template path and cache tags for a layout definition.
 */
function _set_layout_template_path_and_cache_tags($definition, $theme, $patch, $layout_id) {
  $definition->setTemplatePath($patch . '/templates/layouts/' . $theme);
  $definition->addCacheTags([$theme . ':layout:' . $layout_id]);
}

/**
 * Is the layout ID in the preset of back-end supported layouts.
 */
function _is_in_back_end_layout_list($layout_id) {
  $back_end_layout_list = [
    'layout_onecol',
    'layout_twocol',
    'layout_twocol_bricks',
    'layout_threecol_25_50_25',
    'layout_threecol_33_34_33',
    'layout_twocol_section',
    'layout_threecol_section',
    'layout_fourcol_section',
    'layout_1',
    'layout_2',
    'layout_3',
  ];

  return in_array($layout_id, $back_end_layout_list);
}
